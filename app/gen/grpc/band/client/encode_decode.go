// Code generated by goa v3.13.2, DO NOT EDIT.
//
// band gRPC client encoders and decoders
//
// Command:
// $ goa gen app/design

package client

import (
	band "app/gen/band"
	bandpb "app/gen/grpc/band/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc"
	"google.golang.org/grpc/metadata"
)

// BuildPlayFunc builds the remote method to invoke for "band" service "play"
// endpoint.
func BuildPlayFunc(grpccli bandpb.BandClient, cliopts ...grpc.CallOption) goagrpc.RemoteFunc {
	return func(ctx context.Context, reqpb any, opts ...grpc.CallOption) (any, error) {
		for _, opt := range cliopts {
			opts = append(opts, opt)
		}
		if reqpb != nil {
			return grpccli.Play(ctx, reqpb.(*bandpb.PlayRequest), opts...)
		}
		return grpccli.Play(ctx, &bandpb.PlayRequest{}, opts...)
	}
}

// EncodePlayRequest encodes requests sent to band play endpoint.
func EncodePlayRequest(ctx context.Context, v any, md *metadata.MD) (any, error) {
	payload, ok := v.(*band.PlayPayload)
	if !ok {
		return nil, goagrpc.ErrInvalidType("band", "play", "*band.PlayPayload", v)
	}
	return NewProtoPlayRequest(payload), nil
}
