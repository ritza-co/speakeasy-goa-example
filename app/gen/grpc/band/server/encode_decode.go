// Code generated by goa v3.13.2, DO NOT EDIT.
//
// band gRPC server encoders and decoders
//
// Command:
// $ goa gen app/design

package server

import (
	band "app/gen/band"
	bandpb "app/gen/grpc/band/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodePlayResponse encodes responses from the "band" service "play" endpoint.
func EncodePlayResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	resp := NewProtoPlayResponse()
	return resp, nil
}

// DecodePlayRequest decodes requests sent to "band" service "play" endpoint.
func DecodePlayRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *bandpb.PlayRequest
		ok      bool
	)
	{
		if message, ok = v.(*bandpb.PlayRequest); !ok {
			return nil, goagrpc.ErrInvalidType("band", "play", "*bandpb.PlayRequest", v)
		}
		if err := ValidatePlayRequest(message); err != nil {
			return nil, err
		}
	}
	var payload *band.PlayPayload
	{
		payload = NewPlayPayload(message)
	}
	return payload, nil
}
