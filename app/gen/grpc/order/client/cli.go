// Code generated by goa v3.13.2, DO NOT EDIT.
//
// order gRPC client CLI support package
//
// Command:
// $ goa gen app/design

package client

import (
	orderpb "app/gen/grpc/order/pb"
	order "app/gen/order"
	"encoding/json"
	"fmt"
)

// BuildTeaPayload builds the payload for the order tea endpoint from CLI flags.
func BuildTeaPayload(orderTeaMessage string) (*order.TeaPayload, error) {
	var err error
	var message orderpb.TeaRequest
	{
		if orderTeaMessage != "" {
			err = json.Unmarshal([]byte(orderTeaMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"includeMilk\": true,\n      \"isGreen\": true,\n      \"numberSugars\": 4258777314432124607\n   }'")
			}
		}
	}
	v := &order.TeaPayload{
		IsGreen:     message.IsGreen,
		IncludeMilk: message.IncludeMilk,
	}
	if message.NumberSugars != nil {
		numberSugars := int(*message.NumberSugars)
		v.NumberSugars = &numberSugars
	}

	return v, nil
}
