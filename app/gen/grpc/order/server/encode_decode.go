// Code generated by goa v3.13.2, DO NOT EDIT.
//
// order gRPC server encoders and decoders
//
// Command:
// $ goa gen app/design

package server

import (
	orderpb "app/gen/grpc/order/pb"
	order "app/gen/order"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeTeaResponse encodes responses from the "order" service "tea" endpoint.
func EncodeTeaResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	result, ok := v.(string)
	if !ok {
		return nil, goagrpc.ErrInvalidType("order", "tea", "string", v)
	}
	resp := NewProtoTeaResponse(result)
	return resp, nil
}

// DecodeTeaRequest decodes requests sent to "order" service "tea" endpoint.
func DecodeTeaRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *orderpb.TeaRequest
		ok      bool
	)
	{
		if message, ok = v.(*orderpb.TeaRequest); !ok {
			return nil, goagrpc.ErrInvalidType("order", "tea", "*orderpb.TeaRequest", v)
		}
	}
	var payload *order.TeaPayload
	{
		payload = NewTeaPayload(message)
	}
	return payload, nil
}
