// Code generated by goa v3.13.2, DO NOT EDIT.
//
// band HTTP client CLI support package
//
// Command:
// $ goa gen app/design

package client

import (
	band "app/gen/band"
	"encoding/json"
	"fmt"

	goa "goa.design/goa/v3/pkg"
)

// BuildPlayPayload builds the payload for the band play endpoint from CLI
// flags.
func BuildPlayPayload(bandPlayBody string) (*band.PlayPayload, error) {
	var err error
	var body PlayRequestBody
	{
		err = json.Unmarshal([]byte(bandPlayBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"style\": \"Bebop\"\n   }'")
		}
		if !(body.Style == "Bebop" || body.Style == "Swing") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.style", body.Style, []any{"Bebop", "Swing"}))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &band.PlayPayload{
		Style: body.Style,
	}

	return v, nil
}
