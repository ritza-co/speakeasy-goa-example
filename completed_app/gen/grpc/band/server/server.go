// Code generated by goa v3.13.2, DO NOT EDIT.
//
// band gRPC server
//
// Command:
// $ goa gen app/design

package server

import (
	band "app/gen/band"
	bandpb "app/gen/grpc/band/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the bandpb.BandServer interface.
type Server struct {
	PlayH goagrpc.UnaryHandler
	bandpb.UnimplementedBandServer
}

// New instantiates the server struct with the band service endpoints.
func New(e *band.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		PlayH: NewPlayHandler(e.Play, uh),
	}
}

// NewPlayHandler creates a gRPC handler which serves the "band" service "play"
// endpoint.
func NewPlayHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodePlayRequest, EncodePlayResponse)
	}
	return h
}

// Play implements the "Play" method in bandpb.BandServer interface.
func (s *Server) Play(ctx context.Context, message *bandpb.PlayRequest) (*bandpb.PlayResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "play")
	ctx = context.WithValue(ctx, goa.ServiceKey, "band")
	resp, err := s.PlayH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*bandpb.PlayResponse), nil
}
