// Code generated by goa v3.13.2, DO NOT EDIT.
//
// band HTTP server types
//
// Command:
// $ goa gen app/design

package server

import (
	band "app/gen/band"

	goa "goa.design/goa/v3/pkg"
)

// PlayRequestBody is the type of the "band" service "play" endpoint HTTP
// request body.
type PlayRequestBody struct {
	// Style of music to play
	Style *string `form:"style,omitempty" json:"style,omitempty" xml:"style,omitempty"`
}

// NewPlayPayload builds a band service play endpoint payload.
func NewPlayPayload(body *PlayRequestBody) *band.PlayPayload {
	v := &band.PlayPayload{
		Style: *body.Style,
	}

	return v
}

// ValidatePlayRequestBody runs the validations defined on PlayRequestBody
func ValidatePlayRequestBody(body *PlayRequestBody) (err error) {
	if body.Style == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("style", "body"))
	}
	if body.Style != nil {
		if !(*body.Style == "Bebop" || *body.Style == "Swing") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.style", *body.Style, []any{"Bebop", "Swing"}))
		}
	}
	return
}
