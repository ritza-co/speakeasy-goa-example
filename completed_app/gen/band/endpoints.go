// Code generated by goa v3.13.2, DO NOT EDIT.
//
// band endpoints
//
// Command:
// $ goa gen app/design

package band

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "band" service endpoints.
type Endpoints struct {
	Play goa.Endpoint
}

// NewEndpoints wraps the methods of the "band" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Play: NewPlayEndpoint(s),
	}
}

// Use applies the given middleware to all the "band" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Play = m(e.Play)
}

// NewPlayEndpoint returns an endpoint function that calls the method "play" of
// service "band".
func NewPlayEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*PlayPayload)
		return nil, s.Play(ctx, p)
	}
}
